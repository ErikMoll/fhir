<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

<div>
<a name="bnc"></a>
<h2>Scope and Usage</h2>

<p>The ActorDefinition Resource represents an actor that can play the role of a participant
in some kind of described process.</p>

<p>
ActorDefinitions can be referenced in several places:
<li>[<a href="examplescenario.html">ExampleScenarios</a>] which show how data might flow in different situations.</li>
<li>[<a href="plandefinition.html">PlanDefinition</a>] which defines how a workflow should/is allowed to occur amongst a set of actors.</li>
<li>[<a href="requirements.html">Requirements</a>] which defines higher level expectations about system capabilities.</li>
<li>The [<a href="obligations.html">obligation</a>] extension, which allows system behaviors to be defined on a per-element basis.</li>
<li>[<a href="capabilitystatement.html">CapabilityStatement</a>] which allows pointing to ActorDefinitions to describe the specific sets of functionality supported by (or that should be supported by) systems (via obligations)</li>
</p>

<p>
Like all canonical resources, ActorDefinitions can be defined, published and managed in ImplementationGuides and used to describe
expected capabilities and roles within the IG, but can also be leveraged (via dependencies) by other implementation guides.
</p>
</div>

<div>
<h2>Boundaries and Relationships</h2>

<p>
Both ActorDefinition and <a href="capabilitystatement.html">CapabilityStatement</a>> describe 'systems'.
However, ActorDefinition does not presume those systems will have FHIR interfaces and does not directly
speak to what the systems do, while CapabilityStatement is focused on describing the FHIR interface
of a system in terms of exactly what interactions, operations, messages, etc. it can consume and produce.
A CapabilityStatement may point to one or more ActorDefinitions to allow expression of the detailed data 
behaviors associated with a FHIR system.
</p>
<p>
<a href="device.html">Device</a> can also be used to represent a 'system', but the concern there is about the metadata such as
manufacturer, software version, etc., not the interoperability capabilities or how it integrates with
other systems.
</p>
<p>
<a href="patient.html">Patient</a>, <a href="practitioner.html">Practitioner</a>, <a href="practitionerrole.html">PractitionerRole</a> 
and <a href="relatedperson.html">RelatedPerson</a> can all represent individual people or animals, which ActorDefinition also does.  
However ActorDefinition refers to a 'type' of individual, while the others all refer to specific individuals.  ActorDefinition is 
interested in capability, while the other resources are focused on characteristics.
</p>

</div>
<!--
<div>
<h2>Background and Context</h2>
<p>
To do
</p>

</div>
-->
</div>
